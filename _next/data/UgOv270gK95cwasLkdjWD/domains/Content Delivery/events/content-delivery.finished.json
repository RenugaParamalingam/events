{"pageProps":{"event":{"name":"content-delivery.finished","version":1,"summary":"Event represents the content delivery is complete.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"producers":[{"name":"Inbox","summary":"Delivery system to handle theatre delivery.\n","domain":"Content Delivery","owners":[],"repository":{"language":"Go","url":"https://github.com/RealImage/qw-inbox"},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"content-delivery.accepted","version":1,"summary":"Event represents the content delivery is accepted and initiated.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.finished","version":1,"summary":"Event represents the content delivery is complete.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.rejected","version":1,"summary":"Event represents the delivery system currently assigned is unable to deliver the content.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[]},{"name":"Partners","summary":"Delivery system to handle partner delivery.\n","domain":"Content Delivery","owners":[],"repository":{"language":"NodeJS","url":"https://github.com/RealImage/qw-partners"},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"content-delivery.accepted","version":1,"summary":"Event represents the content delivery is accepted and initiated.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.finished","version":1,"summary":"Event represents the content delivery is complete.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.rejected","version":1,"summary":"Event represents the delivery system currently assigned is unable to deliver the content.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[]}],"consumers":[{"name":"QW events","summary":"Application holding the events produced by QubeWire services.\n","domain":"Content Delivery","owners":[],"repository":{"language":"Go","url":"https://github.com/RealImage/qw-delivery-dashboard"},"tags":[],"externalLinks":[],"badges":[],"publishes":[],"subscribes":[{"name":"content-delivery.accepted","version":1,"summary":"Event represents the content delivery is accepted and initiated.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.booked","version":1,"summary":"Event represents the content booking is successfully made.\n","domain":"Content Delivery","producerNames":["Monarch"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.cancelled","version":1,"summary":"Event represents the conetent booking is cancelled.\n","domain":"Content Delivery","producerNames":["Monarch"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.finished","version":1,"summary":"Event represents the content delivery is complete.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.planned","version":1,"summary":"Event represents the delivery method is chosen and ready to be processed.\n","domain":"Content Delivery","producerNames":["Dispatcher"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]},{"name":"content-delivery.rejected","version":1,"summary":"Event represents the delivery system currently assigned is unable to deliver the content.\n","domain":"Content Delivery","producerNames":["Inbox","Partners"],"consumerNames":["QW events"],"owners":[],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]}],"historicVersions":[],"schema":{"snippet":"{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"$id\": \"https://github.com/RealImage/qw-events-catalog/domains/Content%20Delivery/events/content-delivery.finished/schema.json\",\n    \"title\": \"Finished content delivery\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"eventId\": {\n            \"description\": \"Unique identifier to identify the finished event\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n        },\n        \"eventVersion\": {\n            \"description\": \"Version of the event\",\n            \"type\": \"number\"\n        },\n        \"dataSchema\": {\n            \"description\": \"Schema that data adheres to\",\n            \"type\": \"string\",\n            \"format\": \"uri\"\n        },\n        \"acceptedEventId\": {\n            \"description\": \"Unique identifier of the accepted event (parent)\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n        },\n        \"finishInfo\": {\n            \"type\": \"object\"\n        }\n    },\n    \"required\": [\n        \"eventId\",\n        \"eventVersion\",\n        \"dataSchema\",\n        \"acceptedEventId\",\n        \"finishInfo\"\n    ]\n}","language":"json","extension":"json"},"examples":[{"name":"partner_and_electronic.json","snippet":"{\n    \"eventId\": \"0184dc26-2818-f1e2-8456-7ae95db29943\",\n    \"dataSchema\": \"https://github.com/RealImage/qw-events-catalog/blob/main/domains/Content%20Delivery/events/content-delivery.finished/schema.json\",\n    \"eventVersion\": 1.0,\n    \"acceptedEventId\": \"0184cc45-3718-545d-3f2c-64c519602f7c\",\n    \"finishInfo\": {}\n}","langugage":"json"},{"name":"theatre_appliance.json","snippet":"{\n    \"eventId\": \"0184dc26-2818-1bee-05d0-f113cbc2d775\",\n    \"dataSchema\": \"https://github.com/RealImage/qw-events-catalog/blob/main/domains/Content%20Delivery/events/content-delivery.finished/schema.json\",\n    \"eventVersion\": 1.0,\n    \"acceptedEventId\": \"0184dc26-2818-cce6-8621-7186a7487d40\",\n    \"finishInfo\": {}\n}","langugage":"json"}]},"eventPath":"/domains/Content Delivery/events/content-delivery.finished","breadCrumbs":[{"name":"Domain","href":"/domains","current":false},{"name":"Content Delivery","href":"/domains/Content Delivery","current":false},{"name":"Events","href":"/events?domain=Content Delivery","current":false},{"name":"content-delivery.finished","href":"/domains/Content Delivery/events/content-delivery.finished","current":true}],"markdown":{"content":"\n\n## Details\n\nThis event is the final event of the content delivery process. It gets raised when the content has been delivered successfully to the theatre. The `content-delivery.finished` event will be published by the delivery systems, [Inbox](/domains/Content%20Delivery/services/Inbox/) and [Partners](/domains/Content%20Delivery/services/Partners/).\n\n<NodeGraph title=\"Producer / Consumer Diagram\" />\n\n<Schema title=\"Event Schema\" />\n\n<SchemaViewer title=\"Event properties\" defaultExpandedDepth='0' renderRootTreeLines maxHeight=\"500\" />\n\n\n## How to generate ID for content-delivery.finished event:\n\nTo learn how to produce event id, see [event id generation](https://github.com/RealImage/qw-events-catalog/blob/main/docs/event-id.md).\n\nTo generate ULID for the event, use the following components\n\n**Timestamp** - Delivery deadline\n\n**Randomness** - ID of the parent (`content-delivery.accepted` event), Finished info\n\n<Admonition>\nThe randomness component should be concatenated without any connectors and sorted in ascending order.\n\nOrdering is for idempotency. Change in the position of value, will result into different ULIDs inspite of same values. \n</Admonition>\n\n### Example:\n\nSay ID of _content-delivery.accepted_ event is `ae1`\n\nThen _Randomness_ will be, `1ae`\n\n<EventExamples title=\"Sample event\" />","source":{"compiledSource":"var l=Object.defineProperty,c=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,n,t)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))r.call(n,t)&&s(e,t,n[t]);if(i)for(var t of i(n))p.call(n,t)&&s(e,t,n[t]);return e},d=(e,n)=>c(e,h(n));var m=(e,n)=>{var t={};for(var o in e)r.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&i)for(var o of i(e))n.indexOf(o)<0&&p.call(e,o)&&(t[o]=e[o]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},t))},NodeGraph=makeShortcode(\"NodeGraph\"),Schema=makeShortcode(\"Schema\"),SchemaViewer=makeShortcode(\"SchemaViewer\"),Admonition=makeShortcode(\"Admonition\"),EventExamples=makeShortcode(\"EventExamples\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,n=m(o,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Details\"),mdx(\"p\",null,\"This event is the final event of the content delivery process. It gets raised when the content has been delivered successfully to the theatre. The \",mdx(\"inlineCode\",{parentName:\"p\"},\"content-delivery.finished\"),\" event will be published by the delivery systems, \",mdx(\"a\",a({parentName:\"p\"},{href:\"/domains/Content%20Delivery/services/Inbox/\"}),\"Inbox\"),\" and \",mdx(\"a\",a({parentName:\"p\"},{href:\"/domains/Content%20Delivery/services/Partners/\"}),\"Partners\"),\".\"),mdx(NodeGraph,{title:\"Producer / Consumer Diagram\",mdxType:\"NodeGraph\"}),mdx(Schema,{title:\"Event Schema\",mdxType:\"Schema\"}),mdx(SchemaViewer,{title:\"Event properties\",defaultExpandedDepth:\"0\",renderRootTreeLines:!0,maxHeight:\"500\",mdxType:\"SchemaViewer\"}),mdx(\"h2\",null,\"How to generate ID for content-delivery.finished event:\"),mdx(\"p\",null,\"To learn how to produce event id, see \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/RealImage/qw-events-catalog/blob/main/docs/event-id.md\"}),\"event id generation\"),\".\"),mdx(\"p\",null,\"To generate ULID for the event, use the following components\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Timestamp\"),\" - Delivery deadline\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Randomness\"),\" - ID of the parent (\",mdx(\"inlineCode\",{parentName:\"p\"},\"content-delivery.accepted\"),\" event), Finished info\"),mdx(Admonition,{mdxType:\"Admonition\"},\"The randomness component should be concatenated without any connectors and sorted in ascending order.\",mdx(\"p\",null,\"Ordering is for idempotency. Change in the position of value, will result into different ULIDs inspite of same values. \")),mdx(\"h3\",null,\"Example:\"),mdx(\"p\",null,\"Say ID of \",mdx(\"em\",{parentName:\"p\"},\"content-delivery.accepted\"),\" event is \",mdx(\"inlineCode\",{parentName:\"p\"},\"ae1\")),mdx(\"p\",null,\"Then \",mdx(\"em\",{parentName:\"p\"},\"Randomness\"),\" will be, \",mdx(\"inlineCode\",{parentName:\"p\"},\"1ae\")),mdx(EventExamples,{title:\"Sample event\",mdxType:\"EventExamples\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"lastModifiedDate":"2023/3/3"},"loadedVersion":"latest"},"__N_SSG":true}